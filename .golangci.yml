formatters:
  enable:
    - gofmt
    - goimports

linters:
  # please, do not use `enable-all`: it's deprecated and will be removed soon.
  # inverted configuration with `enable-all` and `disable` is not scalable during updates of golangci-lint
  default: none

  enable:
    - asciicheck
    # - bodyclose
    # - deadcode
    # - depguard
    # - dogsled
    # - dupl
    # - errcheck
    - errorlint
    # - funlen
    # - gochecknoglobals
    # - gochecknoinits
    # - gocognit
    # - goconst
    - gocritic
    # - gocyclo
    # - godot
    # - godox
    # - goerr113
    # - gomnd
    # - goprintffuncname
    - gosec
    - govet
    - ineffassign
    # - interfacer
    # - lll
    # - maligned
    - misspell
    - nakedret
    # - nestif
    - nolintlint
    # - prealloc
    - revive
    - rowserrcheck
    # - scopelint
    - staticcheck
    # - structcheck
    # - testpackage
    - testifylint
    # - typecheck
    - unconvert
    - unparam
    - unused
    # - varcheck
    # - whitespace
    # - wsl

  settings:
    gocritic:
      disabled-checks:
        - dupImport # https://github.com/go-critic/go-critic/issues/845
        - commentFormatting
        - unnamedResult
        - importShadow
        - hugeParam
        - rangeValCopy

      enabled-tags:
        - diagnostic
        - experimental
        - opinionated
        - performance
        - style

    gosec:
      excludes:
        - G101

    govet:
      disable:
        - shadow
        - fieldalignment

      enable-all: true

      settings:
        printf: # analyzer name, run `go tool vet help` to see all analyzers
          funcs: # run `go tool vet help printf` to see available settings for `printf` analyzer
            - Print
            - Printf
            - Println
            - Debug
            - Debugf
            - Info
            - Infof
            - Warn
            - Warnf
            - Error
            - Errorf

    nolintlint:
      # report any unused nolint directives
      allow-unused: false

      # don't require an explanation for nolint directives
      require-explanation: false

      # require nolint directives to be specific about which linter is being skipped
      require-specific: true

    revive:
      confidence: 0

      # Due to https://github.com/golangci/golangci-lint/issues/2355 on MacOS the linter is failing with the error
      # message too many files. Set the max-open-files explicitly.
      max-open-files: 2048

    staticcheck:
      checks:
        - all
        - -ST1000

    testifylint:
      disable:
        - require-error

      enable-all: true

output:
  show-stats: false

run:
  go: "1.22"

  timeout: 5m

version: "2"
